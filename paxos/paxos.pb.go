// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: paxos.proto

package paxos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PrepareArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceIdFrom int64 `protobuf:"varint,1,opt,name=InstanceIdFrom,proto3" json:"InstanceIdFrom,omitempty"`
	N              int64 `protobuf:"varint,2,opt,name=N,proto3" json:"N,omitempty"`
	Sender         int32 `protobuf:"varint,3,opt,name=Sender,proto3" json:"Sender,omitempty"`
	LearnToInf     bool  `protobuf:"varint,4,opt,name=LearnToInf,proto3" json:"LearnToInf,omitempty"`
}

func (x *PrepareArgs) Reset() {
	*x = PrepareArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareArgs) ProtoMessage() {}

func (x *PrepareArgs) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareArgs.ProtoReflect.Descriptor instead.
func (*PrepareArgs) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{0}
}

func (x *PrepareArgs) GetInstanceIdFrom() int64 {
	if x != nil {
		return x.InstanceIdFrom
	}
	return 0
}

func (x *PrepareArgs) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *PrepareArgs) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *PrepareArgs) GetLearnToInf() bool {
	if x != nil {
		return x.LearnToInf
	}
	return false
}

type PrepareReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK bool `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	// give the proposer a hint about which N to choose
	HighestNpSeen int64 `protobuf:"varint,2,opt,name=HighestNpSeen,proto3" json:"HighestNpSeen,omitempty"`
	// the instances before is freed
	InstanceIdFrom      int64 `protobuf:"varint,3,opt,name=InstanceIdFrom,proto3" json:"InstanceIdFrom,omitempty"`
	NoMoreAcceptedAfter int64 `protobuf:"varint,4,opt,name=NoMoreAcceptedAfter,proto3" json:"NoMoreAcceptedAfter,omitempty"`
	// if LearnToInf=true, PrepareReply includes all instances
	// in [InstanceIdFrom, max(NoMoreAcceptedAfter, InstanceIdFrom)]
	Na []int64  `protobuf:"varint,5,rep,packed,name=Na,proto3" json:"Na,omitempty"`
	Va [][]byte `protobuf:"bytes,6,rep,name=Va,proto3" json:"Va,omitempty"`
}

func (x *PrepareReply) Reset() {
	*x = PrepareReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareReply) ProtoMessage() {}

func (x *PrepareReply) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareReply.ProtoReflect.Descriptor instead.
func (*PrepareReply) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{1}
}

func (x *PrepareReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *PrepareReply) GetHighestNpSeen() int64 {
	if x != nil {
		return x.HighestNpSeen
	}
	return 0
}

func (x *PrepareReply) GetInstanceIdFrom() int64 {
	if x != nil {
		return x.InstanceIdFrom
	}
	return 0
}

func (x *PrepareReply) GetNoMoreAcceptedAfter() int64 {
	if x != nil {
		return x.NoMoreAcceptedAfter
	}
	return 0
}

func (x *PrepareReply) GetNa() []int64 {
	if x != nil {
		return x.Na
	}
	return nil
}

func (x *PrepareReply) GetVa() [][]byte {
	if x != nil {
		return x.Va
	}
	return nil
}

type AcceptArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceIdFrom int64    `protobuf:"varint,1,opt,name=InstanceIdFrom,proto3" json:"InstanceIdFrom,omitempty"`
	InstanceIdTo   int64    `protobuf:"varint,2,opt,name=InstanceIdTo,proto3" json:"InstanceIdTo,omitempty"`
	Sender         int32    `protobuf:"varint,3,opt,name=Sender,proto3" json:"Sender,omitempty"`
	N              int64    `protobuf:"varint,4,opt,name=N,proto3" json:"N,omitempty"`
	V              [][]byte `protobuf:"bytes,5,rep,name=V,proto3" json:"V,omitempty"`
}

func (x *AcceptArgs) Reset() {
	*x = AcceptArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptArgs) ProtoMessage() {}

func (x *AcceptArgs) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptArgs.ProtoReflect.Descriptor instead.
func (*AcceptArgs) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptArgs) GetInstanceIdFrom() int64 {
	if x != nil {
		return x.InstanceIdFrom
	}
	return 0
}

func (x *AcceptArgs) GetInstanceIdTo() int64 {
	if x != nil {
		return x.InstanceIdTo
	}
	return 0
}

func (x *AcceptArgs) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *AcceptArgs) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *AcceptArgs) GetV() [][]byte {
	if x != nil {
		return x.V
	}
	return nil
}

type AcceptReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK             bool  `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	InstanceIdFrom int64 `protobuf:"varint,2,opt,name=InstanceIdFrom,proto3" json:"InstanceIdFrom,omitempty"`
}

func (x *AcceptReply) Reset() {
	*x = AcceptReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptReply) ProtoMessage() {}

func (x *AcceptReply) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptReply.ProtoReflect.Descriptor instead.
func (*AcceptReply) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{3}
}

func (x *AcceptReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *AcceptReply) GetInstanceIdFrom() int64 {
	if x != nil {
		return x.InstanceIdFrom
	}
	return 0
}

type DecideArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceIdFrom    int64    `protobuf:"varint,1,opt,name=InstanceIdFrom,proto3" json:"InstanceIdFrom,omitempty"`
	InstanceIdTo      int64    `protobuf:"varint,2,opt,name=InstanceIdTo,proto3" json:"InstanceIdTo,omitempty"`
	Sender            int32    `protobuf:"varint,3,opt,name=Sender,proto3" json:"Sender,omitempty"`
	V                 [][]byte `protobuf:"bytes,4,rep,name=V,proto3" json:"V,omitempty"`
	MinimumInstanceId int64    `protobuf:"varint,5,opt,name=MinimumInstanceId,proto3" json:"MinimumInstanceId,omitempty"`
}

func (x *DecideArgs) Reset() {
	*x = DecideArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecideArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideArgs) ProtoMessage() {}

func (x *DecideArgs) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideArgs.ProtoReflect.Descriptor instead.
func (*DecideArgs) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{4}
}

func (x *DecideArgs) GetInstanceIdFrom() int64 {
	if x != nil {
		return x.InstanceIdFrom
	}
	return 0
}

func (x *DecideArgs) GetInstanceIdTo() int64 {
	if x != nil {
		return x.InstanceIdTo
	}
	return 0
}

func (x *DecideArgs) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *DecideArgs) GetV() [][]byte {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *DecideArgs) GetMinimumInstanceId() int64 {
	if x != nil {
		return x.MinimumInstanceId
	}
	return 0
}

type DecideReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK                bool  `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	MinimumInstanceId int64 `protobuf:"varint,2,opt,name=MinimumInstanceId,proto3" json:"MinimumInstanceId,omitempty"`
}

func (x *DecideReply) Reset() {
	*x = DecideReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecideReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideReply) ProtoMessage() {}

func (x *DecideReply) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideReply.ProtoReflect.Descriptor instead.
func (*DecideReply) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{5}
}

func (x *DecideReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *DecideReply) GetMinimumInstanceId() int64 {
	if x != nil {
		return x.MinimumInstanceId
	}
	return 0
}

type HeartbeatArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender                int32 `protobuf:"varint,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	MinimumInstanceId     int64 `protobuf:"varint,2,opt,name=MinimumInstanceId,proto3" json:"MinimumInstanceId,omitempty"`
	HighestInstanceIdSeen int64 `protobuf:"varint,3,opt,name=HighestInstanceIdSeen,proto3" json:"HighestInstanceIdSeen,omitempty"`
}

func (x *HeartbeatArgs) Reset() {
	*x = HeartbeatArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatArgs) ProtoMessage() {}

func (x *HeartbeatArgs) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatArgs.ProtoReflect.Descriptor instead.
func (*HeartbeatArgs) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatArgs) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *HeartbeatArgs) GetMinimumInstanceId() int64 {
	if x != nil {
		return x.MinimumInstanceId
	}
	return 0
}

func (x *HeartbeatArgs) GetHighestInstanceIdSeen() int64 {
	if x != nil {
		return x.HighestInstanceIdSeen
	}
	return 0
}

type HeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK                    bool  `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	MinimumInstanceId     int64 `protobuf:"varint,2,opt,name=MinimumInstanceId,proto3" json:"MinimumInstanceId,omitempty"`
	HighestInstanceIdSeen int64 `protobuf:"varint,3,opt,name=HighestInstanceIdSeen,proto3" json:"HighestInstanceIdSeen,omitempty"`
	// use this to determine the newest highestNp
	// so we will not takeover alive leader if we just recovered from
	// a network partition.
	HighestNp int64 `protobuf:"varint,4,opt,name=HighestNp,proto3" json:"HighestNp,omitempty"`
	// If we are leader, set LeaderNp, -1 otherwise
	LeaderNp int64 `protobuf:"varint,5,opt,name=LeaderNp,proto3" json:"LeaderNp,omitempty"`
}

func (x *HeartbeatReply) Reset() {
	*x = HeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paxos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReply) ProtoMessage() {}

func (x *HeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_paxos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReply.ProtoReflect.Descriptor instead.
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return file_paxos_proto_rawDescGZIP(), []int{7}
}

func (x *HeartbeatReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *HeartbeatReply) GetMinimumInstanceId() int64 {
	if x != nil {
		return x.MinimumInstanceId
	}
	return 0
}

func (x *HeartbeatReply) GetHighestInstanceIdSeen() int64 {
	if x != nil {
		return x.HighestInstanceIdSeen
	}
	return 0
}

func (x *HeartbeatReply) GetHighestNp() int64 {
	if x != nil {
		return x.HighestNp
	}
	return 0
}

func (x *HeartbeatReply) GetLeaderNp() int64 {
	if x != nil {
		return x.LeaderNp
	}
	return 0
}

var File_paxos_proto protoreflect.FileDescriptor

var file_paxos_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x61, 0x78, 0x6f, 0x73, 0x22, 0x7b, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x4e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x54, 0x6f, 0x49, 0x6e, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x54, 0x6f, 0x49, 0x6e,
	0x66, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x4f, 0x4b, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x4e, 0x70, 0x53,
	0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x48, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x4e, 0x70, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x30, 0x0a, 0x13, 0x4e, 0x6f, 0x4d, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x4e,
	0x6f, 0x4d, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x02, 0x4e, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02,
	0x10, 0x01, 0x52, 0x02, 0x4e, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x56, 0x61, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x02, 0x56, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a,
	0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x54, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x54,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x4e, 0x12, 0x0c, 0x0a, 0x01, 0x56, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x01, 0x56, 0x22, 0x45, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x4f, 0x4b, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0xac, 0x01, 0x0a,
	0x0a, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x0c, 0x0a, 0x01, 0x56, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x01, 0x56, 0x12, 0x2c, 0x0a,
	0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0b, 0x44,
	0x65, 0x63, 0x69, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x15, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x53, 0x65, 0x65, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x48, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x53, 0x65, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x4e, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x4e, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x70, 0x32, 0xd7, 0x01, 0x0a, 0x05, 0x50, 0x61, 0x78, 0x6f,
	0x73, 0x12, 0x32, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x12, 0x2e, 0x70,
	0x61, 0x78, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x13, 0x2e, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12,
	0x11, 0x2e, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65,
	0x12, 0x11, 0x2e, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x15, 0x2e, 0x70, 0x61, 0x78,
	0x6f, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x42, 0x16, 0x5a, 0x14, 0x64, 0x73, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f,
	0x73, 0x72, 0x63, 0x2f, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_paxos_proto_rawDescOnce sync.Once
	file_paxos_proto_rawDescData = file_paxos_proto_rawDesc
)

func file_paxos_proto_rawDescGZIP() []byte {
	file_paxos_proto_rawDescOnce.Do(func() {
		file_paxos_proto_rawDescData = protoimpl.X.CompressGZIP(file_paxos_proto_rawDescData)
	})
	return file_paxos_proto_rawDescData
}

var file_paxos_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_paxos_proto_goTypes = []interface{}{
	(*PrepareArgs)(nil),    // 0: paxos.PrepareArgs
	(*PrepareReply)(nil),   // 1: paxos.PrepareReply
	(*AcceptArgs)(nil),     // 2: paxos.AcceptArgs
	(*AcceptReply)(nil),    // 3: paxos.AcceptReply
	(*DecideArgs)(nil),     // 4: paxos.DecideArgs
	(*DecideReply)(nil),    // 5: paxos.DecideReply
	(*HeartbeatArgs)(nil),  // 6: paxos.HeartbeatArgs
	(*HeartbeatReply)(nil), // 7: paxos.HeartbeatReply
}
var file_paxos_proto_depIdxs = []int32{
	0, // 0: paxos.Paxos.Prepare:input_type -> paxos.PrepareArgs
	2, // 1: paxos.Paxos.Accept:input_type -> paxos.AcceptArgs
	4, // 2: paxos.Paxos.Decide:input_type -> paxos.DecideArgs
	6, // 3: paxos.Paxos.Heartbeat:input_type -> paxos.HeartbeatArgs
	1, // 4: paxos.Paxos.Prepare:output_type -> paxos.PrepareReply
	3, // 5: paxos.Paxos.Accept:output_type -> paxos.AcceptReply
	5, // 6: paxos.Paxos.Decide:output_type -> paxos.DecideReply
	7, // 7: paxos.Paxos.Heartbeat:output_type -> paxos.HeartbeatReply
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_paxos_proto_init() }
func file_paxos_proto_init() {
	if File_paxos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_paxos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paxos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paxos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paxos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paxos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecideArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paxos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecideReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paxos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paxos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paxos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paxos_proto_goTypes,
		DependencyIndexes: file_paxos_proto_depIdxs,
		MessageInfos:      file_paxos_proto_msgTypes,
	}.Build()
	File_paxos_proto = out.File
	file_paxos_proto_rawDesc = nil
	file_paxos_proto_goTypes = nil
	file_paxos_proto_depIdxs = nil
}
