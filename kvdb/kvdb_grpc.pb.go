// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package kvdb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// KeyValueDBClient is the client API for KeyValueDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KeyValueDBClient interface {
	BatchSubmit(ctx context.Context, in *BatchSubmitArgs, opts ...grpc.CallOption) (*BatchSubmitReply, error)
}

type keyValueDBClient struct {
	cc grpc.ClientConnInterface
}

func NewKeyValueDBClient(cc grpc.ClientConnInterface) KeyValueDBClient {
	return &keyValueDBClient{cc}
}

func (c *keyValueDBClient) BatchSubmit(ctx context.Context, in *BatchSubmitArgs, opts ...grpc.CallOption) (*BatchSubmitReply, error) {
	out := new(BatchSubmitReply)
	err := c.cc.Invoke(ctx, "/kvdb.KeyValueDB/BatchSubmit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeyValueDBServer is the server API for KeyValueDB service.
// All implementations must embed UnimplementedKeyValueDBServer
// for forward compatibility
type KeyValueDBServer interface {
	BatchSubmit(context.Context, *BatchSubmitArgs) (*BatchSubmitReply, error)
	mustEmbedUnimplementedKeyValueDBServer()
}

// UnimplementedKeyValueDBServer must be embedded to have forward compatible implementations.
type UnimplementedKeyValueDBServer struct {
}

func (UnimplementedKeyValueDBServer) BatchSubmit(context.Context, *BatchSubmitArgs) (*BatchSubmitReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchSubmit not implemented")
}
func (UnimplementedKeyValueDBServer) mustEmbedUnimplementedKeyValueDBServer() {}

// UnsafeKeyValueDBServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KeyValueDBServer will
// result in compilation errors.
type UnsafeKeyValueDBServer interface {
	mustEmbedUnimplementedKeyValueDBServer()
}

func RegisterKeyValueDBServer(s grpc.ServiceRegistrar, srv KeyValueDBServer) {
	s.RegisterService(&_KeyValueDB_serviceDesc, srv)
}

func _KeyValueDB_BatchSubmit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchSubmitArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueDBServer).BatchSubmit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvdb.KeyValueDB/BatchSubmit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueDBServer).BatchSubmit(ctx, req.(*BatchSubmitArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyValueDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvdb.KeyValueDB",
	HandlerType: (*KeyValueDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BatchSubmit",
			Handler:    _KeyValueDB_BatchSubmit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kvdb.proto",
}
