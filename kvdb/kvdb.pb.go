// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: kvdb.proto

package kvdb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateTableOption int32

const (
	CreateTableOption_UseTransactionTableId CreateTableOption = 0
	// not yet implemented
	CreateTableOption_UseRandomUniqueId CreateTableOption = 1
)

// Enum value maps for CreateTableOption.
var (
	CreateTableOption_name = map[int32]string{
		0: "UseTransactionTableId",
		1: "UseRandomUniqueId",
	}
	CreateTableOption_value = map[string]int32{
		"UseTransactionTableId": 0,
		"UseRandomUniqueId":     1,
	}
)

func (x CreateTableOption) Enum() *CreateTableOption {
	p := new(CreateTableOption)
	*p = x
	return p
}

func (x CreateTableOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateTableOption) Descriptor() protoreflect.EnumDescriptor {
	return file_kvdb_proto_enumTypes[0].Descriptor()
}

func (CreateTableOption) Type() protoreflect.EnumType {
	return &file_kvdb_proto_enumTypes[0]
}

func (x CreateTableOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateTableOption.Descriptor instead.
func (CreateTableOption) EnumDescriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{0}
}

type OnFailOption int32

const (
	OnFailOption_Rollback OnFailOption = 0
	OnFailOption_Abort    OnFailOption = 1
	OnFailOption_Continue OnFailOption = 2
)

// Enum value maps for OnFailOption.
var (
	OnFailOption_name = map[int32]string{
		0: "Rollback",
		1: "Abort",
		2: "Continue",
	}
	OnFailOption_value = map[string]int32{
		"Rollback": 0,
		"Abort":    1,
		"Continue": 2,
	}
)

func (x OnFailOption) Enum() *OnFailOption {
	p := new(OnFailOption)
	*p = x
	return p
}

func (x OnFailOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnFailOption) Descriptor() protoreflect.EnumDescriptor {
	return file_kvdb_proto_enumTypes[1].Descriptor()
}

func (OnFailOption) Type() protoreflect.EnumType {
	return &file_kvdb_proto_enumTypes[1]
}

func (x OnFailOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnFailOption.Descriptor instead.
func (OnFailOption) EnumDescriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{1}
}

type TransactionResult_StatusCode int32

const (
	TransactionResult_OK                      TransactionResult_StatusCode = 0
	TransactionResult_TableNotExists          TransactionResult_StatusCode = 1
	TransactionResult_TableAlreadyExists      TransactionResult_StatusCode = 2
	TransactionResult_NotExpectedTableVersion TransactionResult_StatusCode = 3
	TransactionResult_TypeAssertionFailed     TransactionResult_StatusCode = 4
	TransactionResult_UserAssumptionFailed    TransactionResult_StatusCode = 5
	TransactionResult_NotExpectedValueVersion TransactionResult_StatusCode = 6
	TransactionResult_TooLate                 TransactionResult_StatusCode = 7
	TransactionResult_Unknown                 TransactionResult_StatusCode = 11
)

// Enum value maps for TransactionResult_StatusCode.
var (
	TransactionResult_StatusCode_name = map[int32]string{
		0:  "OK",
		1:  "TableNotExists",
		2:  "TableAlreadyExists",
		3:  "NotExpectedTableVersion",
		4:  "TypeAssertionFailed",
		5:  "UserAssumptionFailed",
		6:  "NotExpectedValueVersion",
		7:  "TooLate",
		11: "Unknown",
	}
	TransactionResult_StatusCode_value = map[string]int32{
		"OK":                      0,
		"TableNotExists":          1,
		"TableAlreadyExists":      2,
		"NotExpectedTableVersion": 3,
		"TypeAssertionFailed":     4,
		"UserAssumptionFailed":    5,
		"NotExpectedValueVersion": 6,
		"TooLate":                 7,
		"Unknown":                 11,
	}
)

func (x TransactionResult_StatusCode) Enum() *TransactionResult_StatusCode {
	p := new(TransactionResult_StatusCode)
	*p = x
	return p
}

func (x TransactionResult_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionResult_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_kvdb_proto_enumTypes[2].Descriptor()
}

func (TransactionResult_StatusCode) Type() protoreflect.EnumType {
	return &file_kvdb_proto_enumTypes[2]
}

func (x TransactionResult_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionResult_StatusCode.Descriptor instead.
func (TransactionResult_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{8, 0}
}

type BatchSubmitArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wrapper  *OpWrapper `protobuf:"bytes,1,opt,name=Wrapper,proto3" json:"Wrapper,omitempty"`
	Readonly bool       `protobuf:"varint,2,opt,name=Readonly,proto3" json:"Readonly,omitempty"`
}

func (x *BatchSubmitArgs) Reset() {
	*x = BatchSubmitArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubmitArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubmitArgs) ProtoMessage() {}

func (x *BatchSubmitArgs) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubmitArgs.ProtoReflect.Descriptor instead.
func (*BatchSubmitArgs) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{0}
}

func (x *BatchSubmitArgs) GetWrapper() *OpWrapper {
	if x != nil {
		return x.Wrapper
	}
	return nil
}

func (x *BatchSubmitArgs) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

// A high-level wrapper which contains mini-transactions from multiple users
type OpWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	// WrapperId and ForwarderId is used to uniquely identify an OpWrapper
	ForwarderId  int64          `protobuf:"varint,2,opt,name=ForwarderId,proto3" json:"ForwarderId,omitempty"`
	WrapperId    int64          `protobuf:"varint,3,opt,name=WrapperId,proto3" json:"WrapperId,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,4,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
}

func (x *OpWrapper) Reset() {
	*x = OpWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpWrapper) ProtoMessage() {}

func (x *OpWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpWrapper.ProtoReflect.Descriptor instead.
func (*OpWrapper) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{1}
}

func (x *OpWrapper) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *OpWrapper) GetForwarderId() int64 {
	if x != nil {
		return x.ForwarderId
	}
	return 0
}

func (x *OpWrapper) GetWrapperId() int64 {
	if x != nil {
		return x.WrapperId
	}
	return 0
}

func (x *OpWrapper) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

//  An atomic unit of operations.
//  Transaction with different TableId will be applied concurrently.
//  A table should not contain too much data.
//  ClientId and TransactionId is used to provide exactly-once semantic:
//  once we receive a TransactionId from a client,
//  all requests with smaller TransactionId will be rejected.
//  Server only saves the last transaction result for each client,
//  and clients should send transactions one by one.
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId             string   `protobuf:"bytes,1,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	TransactionId        int64    `protobuf:"varint,2,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	TableId              string   `protobuf:"bytes,3,opt,name=TableId,proto3" json:"TableId,omitempty"`
	Ops                  []*AnyOp `protobuf:"bytes,4,rep,name=Ops,proto3" json:"Ops,omitempty"`
	TableVersionExpected int64    `protobuf:"varint,5,opt,name=TableVersionExpected,proto3" json:"TableVersionExpected,omitempty"`
	TimeStamp            int64    `protobuf:"varint,6,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Transaction) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *Transaction) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *Transaction) GetOps() []*AnyOp {
	if x != nil {
		return x.Ops
	}
	return nil
}

func (x *Transaction) GetTableVersionExpected() int64 {
	if x != nil {
		return x.TableVersionExpected
	}
	return 0
}

func (x *Transaction) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

type AnyOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string    `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	LookupKey []string  `protobuf:"bytes,2,rep,name=LookupKey,proto3" json:"LookupKey,omitempty"`
	Key       string    `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Value     *AnyValue `protobuf:"bytes,4,opt,name=Value,proto3" json:"Value,omitempty"`
	Alias     string    `protobuf:"bytes,5,opt,name=Alias,proto3" json:"Alias,omitempty"`
	// To ignore FieldVersionExpected, set it to -1
	FieldVersionExpected int64        `protobuf:"varint,6,opt,name=FieldVersionExpected,proto3" json:"FieldVersionExpected,omitempty"`
	TableOps             *TableOp     `protobuf:"bytes,7,opt,name=TableOps,proto3" json:"TableOps,omitempty"`
	OnFail               OnFailOption `protobuf:"varint,8,opt,name=OnFail,proto3,enum=kvdb.OnFailOption" json:"OnFail,omitempty"`
}

func (x *AnyOp) Reset() {
	*x = AnyOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyOp) ProtoMessage() {}

func (x *AnyOp) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyOp.ProtoReflect.Descriptor instead.
func (*AnyOp) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{3}
}

func (x *AnyOp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnyOp) GetLookupKey() []string {
	if x != nil {
		return x.LookupKey
	}
	return nil
}

func (x *AnyOp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AnyOp) GetValue() *AnyValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AnyOp) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AnyOp) GetFieldVersionExpected() int64 {
	if x != nil {
		return x.FieldVersionExpected
	}
	return 0
}

func (x *AnyOp) GetTableOps() *TableOp {
	if x != nil {
		return x.TableOps
	}
	return nil
}

func (x *AnyOp) GetOnFail() OnFailOption {
	if x != nil {
		return x.OnFail
	}
	return OnFailOption_Rollback
}

type AnyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string               `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	List    []*AnyValue          `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	Map     map[string]*AnyValue `protobuf:"bytes,3,rep,name=Map,proto3" json:"Map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Str     string               `protobuf:"bytes,4,opt,name=Str,proto3" json:"Str,omitempty"`
	Num     int64                `protobuf:"varint,5,opt,name=Num,proto3" json:"Num,omitempty"`
	Bin     []byte               `protobuf:"bytes,6,opt,name=Bin,proto3" json:"Bin,omitempty"`
	Version int64                `protobuf:"varint,7,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *AnyValue) Reset() {
	*x = AnyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyValue) ProtoMessage() {}

func (x *AnyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyValue.ProtoReflect.Descriptor instead.
func (*AnyValue) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{4}
}

func (x *AnyValue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnyValue) GetList() []*AnyValue {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AnyValue) GetMap() map[string]*AnyValue {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *AnyValue) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *AnyValue) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *AnyValue) GetBin() []byte {
	if x != nil {
		return x.Bin
	}
	return nil
}

func (x *AnyValue) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// TableOp is a special Op that will be applied at db level.
// TableOp must be piggybacked in the first op in a transaction.
type TableOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Option      CreateTableOption `protobuf:"varint,1,opt,name=Option,proto3,enum=kvdb.CreateTableOption" json:"Option,omitempty"`
	ErrIfExists bool              `protobuf:"varint,2,opt,name=ErrIfExists,proto3" json:"ErrIfExists,omitempty"`
}

func (x *TableOp) Reset() {
	*x = TableOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableOp) ProtoMessage() {}

func (x *TableOp) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableOp.ProtoReflect.Descriptor instead.
func (*TableOp) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{5}
}

func (x *TableOp) GetOption() CreateTableOption {
	if x != nil {
		return x.Option
	}
	return CreateTableOption_UseTransactionTableId
}

func (x *TableOp) GetErrIfExists() bool {
	if x != nil {
		return x.ErrIfExists
	}
	return false
}

type BatchSubmitReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK              bool           `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	TalkTo          string         `protobuf:"bytes,2,opt,name=TalkTo,proto3" json:"TalkTo,omitempty"`
	Result          *WrapperResult `protobuf:"bytes,3,opt,name=Result,proto3" json:"Result,omitempty"`
	InternalError   bool           `protobuf:"varint,4,opt,name=InternalError,proto3" json:"InternalError,omitempty"`
	DebugProposalId int64          `protobuf:"varint,5,opt,name=DebugProposalId,proto3" json:"DebugProposalId,omitempty"`
}

func (x *BatchSubmitReply) Reset() {
	*x = BatchSubmitReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubmitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubmitReply) ProtoMessage() {}

func (x *BatchSubmitReply) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubmitReply.ProtoReflect.Descriptor instead.
func (*BatchSubmitReply) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{6}
}

func (x *BatchSubmitReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *BatchSubmitReply) GetTalkTo() string {
	if x != nil {
		return x.TalkTo
	}
	return ""
}

func (x *BatchSubmitReply) GetResult() *WrapperResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BatchSubmitReply) GetInternalError() bool {
	if x != nil {
		return x.InternalError
	}
	return false
}

func (x *BatchSubmitReply) GetDebugProposalId() int64 {
	if x != nil {
		return x.DebugProposalId
	}
	return 0
}

type AliasValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsNull bool      `protobuf:"varint,1,opt,name=IsNull,proto3" json:"IsNull,omitempty"`
	Value  *AnyValue `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *AliasValue) Reset() {
	*x = AliasValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliasValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliasValue) ProtoMessage() {}

func (x *AliasValue) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliasValue.ProtoReflect.Descriptor instead.
func (*AliasValue) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{7}
}

func (x *AliasValue) GetIsNull() bool {
	if x != nil {
		return x.IsNull
	}
	return false
}

func (x *AliasValue) GetValue() *AnyValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type TransactionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId int64                        `protobuf:"varint,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	Status        TransactionResult_StatusCode `protobuf:"varint,2,opt,name=Status,proto3,enum=kvdb.TransactionResult_StatusCode" json:"Status,omitempty"`
	Values        map[string]*AliasValue       `protobuf:"bytes,3,rep,name=Values,proto3" json:"Values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Message       string                       `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	TableVersion  int64                        `protobuf:"varint,5,opt,name=TableVersion,proto3" json:"TableVersion,omitempty"`
}

func (x *TransactionResult) Reset() {
	*x = TransactionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResult) ProtoMessage() {}

func (x *TransactionResult) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResult.ProtoReflect.Descriptor instead.
func (*TransactionResult) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionResult) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *TransactionResult) GetStatus() TransactionResult_StatusCode {
	if x != nil {
		return x.Status
	}
	return TransactionResult_OK
}

func (x *TransactionResult) GetValues() map[string]*AliasValue {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *TransactionResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TransactionResult) GetTableVersion() int64 {
	if x != nil {
		return x.TableVersion
	}
	return 0
}

type WrapperResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionResults []*TransactionResult `protobuf:"bytes,1,rep,name=TransactionResults,proto3" json:"TransactionResults,omitempty"`
}

func (x *WrapperResult) Reset() {
	*x = WrapperResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvdb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrapperResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrapperResult) ProtoMessage() {}

func (x *WrapperResult) ProtoReflect() protoreflect.Message {
	mi := &file_kvdb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrapperResult.ProtoReflect.Descriptor instead.
func (*WrapperResult) Descriptor() ([]byte, []int) {
	return file_kvdb_proto_rawDescGZIP(), []int{9}
}

func (x *WrapperResult) GetTransactionResults() []*TransactionResult {
	if x != nil {
		return x.TransactionResults
	}
	return nil
}

var File_kvdb_proto protoreflect.FileDescriptor

var file_kvdb_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6b, 0x76,
	0x64, 0x62, 0x22, 0x58, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x4f, 0x70,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x07, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x98, 0x01, 0x0a,
	0x09, 0x4f, 0x70, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x4f, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x41, 0x6e, 0x79, 0x4f, 0x70, 0x52, 0x03, 0x4f,
	0x70, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x14, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x92, 0x02, 0x0a, 0x05, 0x41, 0x6e, 0x79, 0x4f, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x41, 0x6e, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x32,
	0x0a, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x70, 0x52, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x12, 0x2a, 0x0a,
	0x06, 0x4f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6b, 0x76, 0x64, 0x62, 0x2e, 0x4f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x4f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x22, 0x85, 0x02, 0x0a, 0x08, 0x41, 0x6e,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e,
	0x41, 0x6e, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x03, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x76,
	0x64, 0x62, 0x2e, 0x41, 0x6e, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x74, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x42, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x42, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x46, 0x0a, 0x08, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x41, 0x6e,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x5c, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x12, 0x2f, 0x0a, 0x06,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b,
	0x76, 0x64, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x45, 0x72, 0x72, 0x49, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x45, 0x72, 0x72, 0x49, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22,
	0xb7, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x4f, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x6c, 0x6b, 0x54, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x6c, 0x6b, 0x54, 0x6f, 0x12, 0x2b, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b,
	0x76, 0x64, 0x62, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x28, 0x0a, 0x0f, 0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x44, 0x65, 0x62, 0x75, 0x67, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x0a, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4e, 0x75, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x12,
	0x24, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x41, 0x6e, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x87, 0x04, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a,
	0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6b, 0x76, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x4b, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x79, 0x70, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x18,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x6f, 0x6f, 0x4c, 0x61, 0x74, 0x65,
	0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x0b, 0x22,
	0x58, 0x0a, 0x0d, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x47, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b,
	0x76, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2a, 0x45, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x15, 0x55, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x10, 0x01,
	0x2a, 0x35, 0x0a, 0x0c, 0x4f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x10, 0x02, 0x32, 0x4a, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x44, 0x42, 0x12, 0x3c, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x12, 0x15, 0x2e, 0x6b, 0x76, 0x64, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x6b, 0x76,
	0x64, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x15, 0x5a, 0x13, 0x64, 0x73, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6b, 0x76, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_kvdb_proto_rawDescOnce sync.Once
	file_kvdb_proto_rawDescData = file_kvdb_proto_rawDesc
)

func file_kvdb_proto_rawDescGZIP() []byte {
	file_kvdb_proto_rawDescOnce.Do(func() {
		file_kvdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvdb_proto_rawDescData)
	})
	return file_kvdb_proto_rawDescData
}

var file_kvdb_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_kvdb_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_kvdb_proto_goTypes = []interface{}{
	(CreateTableOption)(0),            // 0: kvdb.CreateTableOption
	(OnFailOption)(0),                 // 1: kvdb.OnFailOption
	(TransactionResult_StatusCode)(0), // 2: kvdb.TransactionResult.StatusCode
	(*BatchSubmitArgs)(nil),           // 3: kvdb.BatchSubmitArgs
	(*OpWrapper)(nil),                 // 4: kvdb.OpWrapper
	(*Transaction)(nil),               // 5: kvdb.Transaction
	(*AnyOp)(nil),                     // 6: kvdb.AnyOp
	(*AnyValue)(nil),                  // 7: kvdb.AnyValue
	(*TableOp)(nil),                   // 8: kvdb.TableOp
	(*BatchSubmitReply)(nil),          // 9: kvdb.BatchSubmitReply
	(*AliasValue)(nil),                // 10: kvdb.AliasValue
	(*TransactionResult)(nil),         // 11: kvdb.TransactionResult
	(*WrapperResult)(nil),             // 12: kvdb.WrapperResult
	nil,                               // 13: kvdb.AnyValue.MapEntry
	nil,                               // 14: kvdb.TransactionResult.ValuesEntry
}
var file_kvdb_proto_depIdxs = []int32{
	4,  // 0: kvdb.BatchSubmitArgs.Wrapper:type_name -> kvdb.OpWrapper
	5,  // 1: kvdb.OpWrapper.Transactions:type_name -> kvdb.Transaction
	6,  // 2: kvdb.Transaction.Ops:type_name -> kvdb.AnyOp
	7,  // 3: kvdb.AnyOp.Value:type_name -> kvdb.AnyValue
	8,  // 4: kvdb.AnyOp.TableOps:type_name -> kvdb.TableOp
	1,  // 5: kvdb.AnyOp.OnFail:type_name -> kvdb.OnFailOption
	7,  // 6: kvdb.AnyValue.List:type_name -> kvdb.AnyValue
	13, // 7: kvdb.AnyValue.Map:type_name -> kvdb.AnyValue.MapEntry
	0,  // 8: kvdb.TableOp.Option:type_name -> kvdb.CreateTableOption
	12, // 9: kvdb.BatchSubmitReply.Result:type_name -> kvdb.WrapperResult
	7,  // 10: kvdb.AliasValue.Value:type_name -> kvdb.AnyValue
	2,  // 11: kvdb.TransactionResult.Status:type_name -> kvdb.TransactionResult.StatusCode
	14, // 12: kvdb.TransactionResult.Values:type_name -> kvdb.TransactionResult.ValuesEntry
	11, // 13: kvdb.WrapperResult.TransactionResults:type_name -> kvdb.TransactionResult
	7,  // 14: kvdb.AnyValue.MapEntry.value:type_name -> kvdb.AnyValue
	10, // 15: kvdb.TransactionResult.ValuesEntry.value:type_name -> kvdb.AliasValue
	3,  // 16: kvdb.KeyValueDB.BatchSubmit:input_type -> kvdb.BatchSubmitArgs
	9,  // 17: kvdb.KeyValueDB.BatchSubmit:output_type -> kvdb.BatchSubmitReply
	17, // [17:18] is the sub-list for method output_type
	16, // [16:17] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_kvdb_proto_init() }
func file_kvdb_proto_init() {
	if File_kvdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kvdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSubmitArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSubmitReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliasValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvdb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrapperResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvdb_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kvdb_proto_goTypes,
		DependencyIndexes: file_kvdb_proto_depIdxs,
		EnumInfos:         file_kvdb_proto_enumTypes,
		MessageInfos:      file_kvdb_proto_msgTypes,
	}.Build()
	File_kvdb_proto = out.File
	file_kvdb_proto_rawDesc = nil
	file_kvdb_proto_goTypes = nil
	file_kvdb_proto_depIdxs = nil
}
